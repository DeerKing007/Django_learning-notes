w3c学习教程-- https://www.w3cschool.cn/django/django-first-app.html

1、安装Django 
	(1)先安装Python环境
	(2)安装对应的Django版本 -- 下载压缩包 https://www.djangoproject.com/download/
	(3)解压 Django包--可以是任意位置
	(4)cd 进入解压目录 找到setup.py文件 
	(5)执行python setup.py install
	(6)检查是否安装成功 
		输入python >>> import django  django.VERSION或 django.get_version()

2、创建项目
	在命令行下输入以下命令：
	django-admin.py startproject HelloWorld

3、启动服务
	cd 进入创建的项目目录
	执行：python manage.py runserver

	打开浏览器访问 http://127.0.0.1:8000  只能在本机访问

	或
	python manage.py runserver 0.0.0.0：8000 可以让其它电脑访问

4、视图和URL配置
	(1)创建视图
	在HelloWorld/HelloWorld目录下 创建一个view.py文件
	from django.http import HttpResponse

	def hello(request):
 		return HttpResponse("Hello world ! ")

 	(2)绑定url与视图中定义的hello函数
 		from django.conf.urls import url
 		from . import view

 		urlpatterns = [
 			url(r'^$',view.hello)
 		]

   不符合MVC模式

 5、Django模板 -- 模板是一个文本，用于分离文档的表现形式和内容。
 	(1)在HelloWorld项目根目录下创建一个template目录
 	(2)在template目录下创建一个hello.html文件
 	(3)在html文件中添加以下内容：
 		<h1>{{hello}}</h1>

 	模板中我们知道变量使用了双括号。
 	(4)接下来我们需要向Django说明模板文件的路径，修改HelloWorld/settings.py，修改 TEMPLATES 中的 DIRS 为 [BASE_DIR+"/templates",]，如下所示:

 	TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR+'/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


	(5)修改view.py
		# -*- coding: UTF-8 -*-
		from django.http import HttpResponse
		from django.shortcuts import render
		 

		def hello(request):
			context = {}
			context['hello'] = "MTV模式"
			return render(request,'hello.html',context)

	这样我们就完成了使用模板来输出数据，从而实现数据与视图分离。

6、Django模型
	(1)安装mysql驱动  sudo pip install mysqlclient  如果没有安装mysql先安装mysql
	(2)数据库配置
		在settings.py文件中找到DATABASES配置项
	DATABASES = {
    	'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'test',    #数据库名 需要自己创建
        'USER': 'test',    #数据库账号
        'PASSWORD': 'test123',
        'HOST':'localhost',
        'PORT':'3306',
   	 	}
	}

	(3)创建App - Django规定要使用模型必须创建一个app 对应命令如下:
		python manage.py startapp TestModel

	(4)修改models.py文件 如下:
	# models.py
	from django.db import models

	class Test(models.Model):
	    name = models.CharField(max_length=20)

	(5)在命令行中运行
	$ python manage.py migrate
	$ python manage.py makemigrations TestModel
	$ python manage.py migrate TestModel
		

		表名组成结构为：app名_类名（如：TestModel_test）。

	

7、数据库操作
	在HelloWorld/HelloWorld目录中添加testdb.py文件 并修改urls.py
		from django.conf.urls import *
		from . import view,testdb

		urlpatterns = [
			url(r'^hello$',view.hello),
			url(r'testdb',testdb.testdb),
			url(r'testdb',testdb.query),
		]

	添加数据 testdb.py
	from django.http import HttpResponse
	from TestModel.models import Test

	def testdb(request)
		test1 = Test(name='runoob')
		test1.save()
		return HttpResponse("<p>数据添加成功</p>")

 
 8、Django表单
 	Get方法
 		(1)在HelloWorld/HelloWorld目录下创建search.py文件
 			# -*- coding: utf-8 -*-
 
			from django.http import HttpResponse
			from django.shortcuts import render_to_response
			 
			# 表单
			def search_form(request):
			    return render_to_response('search_form.html')
			 
			# 接收请求数据
			def search(request):  
			    request.encoding='utf-8'
			    if 'q' in request.GET:
			        message = '你搜索的内容为: ' + request.GET['q']
			    else:
			        message = '你提交了空表单'
			    return HttpResponse(message)
 		
 		(2)在模板目录 templates 中添加 search_form.html 表单：
 			<!DOCTYPE html>
			<html>
			<head>
			<meta charset="utf-8">
			<title>菜鸟教程(runoob.com)</title>
			</head>
			<body>
			    <form action="/search" method="get">
			        <input type="text" name="q">
			        <input type="submit" value="搜索">
			    </form>
			</body>
			</html>

 		(3)urls.py 规则修改为如下形式：
 			from django.conf.urls import url
			from . import view,testdb,search
			 
			urlpatterns = [
			    url(r'^hello$', view.hello),
			    url(r'^testdb$', testdb.testdb),
			    url(r'^search-form$', search.search_form),
			    url(r'^search$', search.search),
			]


	POST方法
		(1)
		(2)
		(3)

9、Admin管理工具














